"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[4183],{3905:function(e,t,r){r.d(t,{Zo:function(){return p},kt:function(){return m}});var n=r(7294);function o(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function i(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function a(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?i(Object(r),!0).forEach((function(t){o(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):i(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function s(e,t){if(null==e)return{};var r,n,o=function(e,t){if(null==e)return{};var r,n,o={},i=Object.keys(e);for(n=0;n<i.length;n++)r=i[n],t.indexOf(r)>=0||(o[r]=e[r]);return o}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(n=0;n<i.length;n++)r=i[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(o[r]=e[r])}return o}var l=n.createContext({}),c=function(e){var t=n.useContext(l),r=t;return e&&(r="function"==typeof e?e(t):a(a({},t),e)),r},p=function(e){var t=c(e.components);return n.createElement(l.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},d=n.forwardRef((function(e,t){var r=e.components,o=e.mdxType,i=e.originalType,l=e.parentName,p=s(e,["components","mdxType","originalType","parentName"]),d=c(r),m=o,f=d["".concat(l,".").concat(m)]||d[m]||u[m]||i;return r?n.createElement(f,a(a({ref:t},p),{},{components:r})):n.createElement(f,a({ref:t},p))}));function m(e,t){var r=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var i=r.length,a=new Array(i);a[0]=d;var s={};for(var l in t)hasOwnProperty.call(t,l)&&(s[l]=t[l]);s.originalType=e,s.mdxType="string"==typeof e?e:o,a[1]=s;for(var c=2;c<i;c++)a[c]=r[c];return n.createElement.apply(null,a)}return n.createElement.apply(null,r)}d.displayName="MDXCreateElement"},3688:function(e,t,r){r.r(t),r.d(t,{frontMatter:function(){return s},contentTitle:function(){return l},metadata:function(){return c},toc:function(){return p},default:function(){return d}});var n=r(7462),o=r(3366),i=(r(7294),r(3905)),a=["components"],s={title:"Architecture Overview"},l=void 0,c={unversionedId:"architecture/architecture-overview",id:"version-1.x/architecture/architecture-overview",title:"Architecture Overview",description:"FoalTS is a framework for creating server-side Node.js applications. It is written in TypeScript, a typed superset of JavaScript that provides advanced development tools and the latest language features.",source:"@site/versioned_docs/version-1.x/architecture/architecture-overview.md",sourceDirName:"architecture",slug:"/architecture/architecture-overview",permalink:"/id/docs/1.x/architecture/architecture-overview",editUrl:"https://github.com/FoalTS/foal/edit/master/docs/versioned_docs/version-1.x/architecture/architecture-overview.md",tags:[],version:"1.x",frontMatter:{title:"Architecture Overview"},sidebar:"someSidebar",previous:{title:"Unit Testing",permalink:"/id/docs/1.x/tutorials/mongodb-todo-list/tuto-7-unit-testing"},next:{title:"Controllers",permalink:"/id/docs/1.x/architecture/controllers"}},p=[{value:"Controllers",id:"controllers",children:[],level:2},{value:"Services",id:"services",children:[],level:2},{value:"Hooks",id:"hooks",children:[],level:2},{value:"A Simple Application",id:"a-simple-application",children:[],level:2}],u={toc:p};function d(e){var t=e.components,s=(0,o.Z)(e,a);return(0,i.kt)("wrapper",(0,n.Z)({},u,s,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("p",null,"FoalTS is a framework for creating server-side ",(0,i.kt)("a",{parentName:"p",href:"https://nodejs.org"},"Node.js")," applications. It is written in ",(0,i.kt)("a",{parentName:"p",href:"https://www.typescriptlang.org/"},"TypeScript"),", a typed superset of JavaScript that provides advanced development tools and the latest language features."),(0,i.kt)("p",null,"FoalTS architecture is organized around three main components: controllers, services and hooks."),(0,i.kt)("h2",{id:"controllers"},"Controllers"),(0,i.kt)("p",null,"Controllers are classes instantiated as singletons. Their methods process the incoming HTTP requests."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-typescript"},"import { Get, HttpResponseOK } from '@foal/core';\n\nclass AppController {\n\n  @Get('/')\n  index() {\n    return new HttpResponseOK('Hello world!');\n  }\n\n}\n")),(0,i.kt)("h2",{id:"services"},"Services"),(0,i.kt)("p",null,"Services are also classes instantiated as singletons. They are used by the controllers (or hooks) to perform specific tasks."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-typescript"},"import { dependency, Get, HttpResponseOK } from '@foal/core';\n\nclass AppController {\n  @dependency\n  logger: Logger;\n\n  @Get('/')\n  index() {\n    this.logger.log('index has been called!');\n    return new HttpResponseOK('Hello world!');\n  }\n\n}\n\nclass Logger {\n  log(message: string) {\n    console.log(`${new Date()} - ${message}`);\n  }\n}\n")),(0,i.kt)("h2",{id:"hooks"},"Hooks"),(0,i.kt)("p",null,"Hooks are small functions that add extra logic before or after the execution of a controller method."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-typescript"},"import { Get, HttpResponseOK } from '@foal/core';\nimport { JWTRequired } from '@foal/jwt';\n\nclass AppController {\n\n  @Get('/')\n  @JWTRequired()\n  index() {\n    return new HttpResponseOK('Hello world!');\n  }\n\n}\n")),(0,i.kt)("h2",{id:"a-simple-application"},"A Simple Application"),(0,i.kt)("p",null,"Controllers may have sub-controllers. Hooks can be attached to the controllers or their methods. "),(0,i.kt)("p",null,"Here's an example of what a FoalTS application may look like."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-typescript"},"import { Context, Get, HttpResponseNotFound, HttpResponseOK, Log } from '@foal/core';\nimport { JWTRequired } from '@foal/jwt';\n\n@JWTRequired()\nclass ApiController {\n  private products = [\n    { id: 1, name: 'phone' },\n    { id: 2, name: 'computer' },\n  ]\n\n  @Get('/products')\n  listProducts() {\n    return new HttpResponseOK(this.products);\n  }\n\n  @Get('/products/:id')\n  getProduct(ctx: Context) {\n    const product = this.products.findOne(\n      p => p.id === ctx.request.params.id\n    );\n\n    if (!product) {\n      return new HttpResponseNotFound();\n    }\n\n    return new HttpResponseOK(product);\n  }\n}\n\n@Log('Receiving a request...')\nclass AppController {\n  subControllers = [\n    controller('/api', ApiController)\n  ];\n\n  @Get('/')\n  index() {\n    return new HttpResponseOK('Welcome!');\n  }\n}\n")),(0,i.kt)("p",null,(0,i.kt)("img",{alt:"Request Lifecycle",src:r(4463).Z,width:"677",height:"359"})))}d.isMDXComponent=!0},4463:function(e,t,r){t.Z=r.p+"assets/images/request_lifecycle-6483154b08c8a22d7412d0fa953a7304.png"}}]);