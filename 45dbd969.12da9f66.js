(window.webpackJsonp=window.webpackJsonp||[]).push([[59],{127:function(e,t,n){"use strict";n.r(t),n.d(t,"frontMatter",(function(){return c})),n.d(t,"metadata",(function(){return s})),n.d(t,"rightToc",(function(){return p})),n.d(t,"default",(function(){return b}));var r=n(3),o=n(7),a=(n(0),n(251)),c={title:"Controllers"},s={unversionedId:"architecture/controllers",id:"architecture/controllers",isDocsHomePage:!1,title:"Controllers",description:"You are reading the documentation for version 2 of FoalTS. Instructions for upgrading to this version are available here. The old documentation can be found here.",source:"@site/docs/architecture/controllers.md",slug:"/architecture/controllers",permalink:"/foal/docs/architecture/controllers",editUrl:"https://github.com/FoalTS/foal/edit/master/docs/docs/architecture/controllers.md",version:"current",sidebar:"someSidebar",previous:{title:"Architecture Overview",permalink:"/foal/docs/architecture/architecture-overview"},next:{title:"Services & Dependency Injection",permalink:"/foal/docs/architecture/services-and-dependency-injection"}},p=[{value:"Description",id:"description",children:[]},{value:"Controller Architecture",id:"controller-architecture",children:[]},{value:"The <code>AppController</code>",id:"the-appcontroller",children:[]},{value:"Contexts &amp; HTTP Requests",id:"contexts--http-requests",children:[{value:"The <code>Context</code> object",id:"the-context-object",children:[]},{value:"HTTP Requests",id:"http-requests",children:[]}]},{value:"HTTP Responses",id:"http-responses",children:[{value:"Adding Headers",id:"adding-headers",children:[]},{value:"Adding Cookies",id:"adding-cookies",children:[]}]},{value:"Testing Controllers",id:"testing-controllers",children:[]},{value:"Inheriting Controllers",id:"inheriting-controllers",children:[]}],l={rightToc:p};function b(e){var t=e.components,n=Object(o.a)(e,["components"]);return Object(a.b)("wrapper",Object(r.a)({},l,n,{components:t,mdxType:"MDXLayout"}),Object(a.b)("blockquote",null,Object(a.b)("p",{parentName:"blockquote"},"You are reading the documentation for version 2 of FoalTS. Instructions for upgrading to this version are available ",Object(a.b)("a",Object(r.a)({parentName:"p"},{href:"/foal/docs/upgrade-to-v2/README"}),"here"),". The old documentation can be found ",Object(a.b)("a",Object(r.a)({parentName:"p"},{href:"https://github.com/FoalTS/foal/tree/v1.x/docs"}),"here"),".")),Object(a.b)("pre",null,Object(a.b)("code",Object(r.a)({parentName:"pre"},{className:"language-sh"}),"foal generate controller my-controller\n")),Object(a.b)("pre",null,Object(a.b)("code",Object(r.a)({parentName:"pre"},{className:"language-typescript"}),"import { Context, Get, HttpResponseOK } from '@foal/core';\n\nexport class ProductController {\n\n  @Get('/products')\n  listProducts(ctx: Context) {\n    return new HttpResponseOK([]);\n  }\n\n}\n")),Object(a.b)("h2",{id:"description"},"Description"),Object(a.b)("p",null,"Controllers are the front door of your application. They intercept all incoming requests and return the responses to the client."),Object(a.b)("p",null,"The code of a controller should be concise. If necessary, controllers can delegate some tasks to services (usually the business logic)."),Object(a.b)("h2",{id:"controller-architecture"},"Controller Architecture"),Object(a.b)("p",null,"A controller is simply a class of which some methods are responsible for a route. These methods must be decorated by one of theses decorators ",Object(a.b)("inlineCode",{parentName:"p"},"Get"),", ",Object(a.b)("inlineCode",{parentName:"p"},"Post"),", ",Object(a.b)("inlineCode",{parentName:"p"},"Patch"),", ",Object(a.b)("inlineCode",{parentName:"p"},"Put"),", ",Object(a.b)("inlineCode",{parentName:"p"},"Delete"),", ",Object(a.b)("inlineCode",{parentName:"p"},"Head")," or ",Object(a.b)("inlineCode",{parentName:"p"},"Options"),". They may be asynchronous."),Object(a.b)("p",null,Object(a.b)("em",{parentName:"p"},"Example:")),Object(a.b)("pre",null,Object(a.b)("code",Object(r.a)({parentName:"pre"},{className:"language-typescript"}),"import { Get, HttpResponseOK, Post } from '@foal/core';\n\nclass MyController {\n  @Get('/foo')\n  foo() {\n    return new HttpResponseOK('I\\'m listening to GET /foo requests.');\n  }\n\n  @Post('/bar')\n  bar() {\n    return new HttpResponseOK('I\\'m listening to POST /bar requests.');\n  }\n}\n")),Object(a.b)("p",null,"Controllers may have sub-controllers declared in the ",Object(a.b)("inlineCode",{parentName:"p"},"subControllers")," property."),Object(a.b)("p",null,Object(a.b)("em",{parentName:"p"},"Example:")),Object(a.b)("pre",null,Object(a.b)("code",Object(r.a)({parentName:"pre"},{className:"language-typescript"}),"import { controller, Get, HttpResponseOK, Post } from '@foal/core';\n\nclass MySubController {\n  @Get('/foo')\n  foo() {\n    return new HttpResponseOK('I\\'m listening to GET /barfoo/foo requests.');\n  }\n}\n\nclass MyController {\n  subControllers = [\n    controller('/barfoo', MySubController)\n  ]\n\n  @Post('/bar')\n  bar() {\n    return new HttpResponseOK('I\\'m listening to POST /bar requests.');\n  }\n}\n")),Object(a.b)("h2",{id:"the-appcontroller"},"The ",Object(a.b)("inlineCode",{parentName:"h2"},"AppController")),Object(a.b)("p",null,"The ",Object(a.b)("inlineCode",{parentName:"p"},"AppController")," is the main controller of your application. It is directly bound to the request handler. Every controller must be, directly or indirectly, a sub-controller of the ",Object(a.b)("inlineCode",{parentName:"p"},"AppController"),"."),Object(a.b)("p",null,Object(a.b)("em",{parentName:"p"},"Example:")),Object(a.b)("pre",null,Object(a.b)("code",Object(r.a)({parentName:"pre"},{className:"language-typescript"}),"import { controller, IAppController } from '@foal/core';\n\nimport { ApiController } from './controllers/api.controller';\n\nexport class AppController implements IAppController {\n  subControllers = [\n    controller('/api', ApiController)\n  ];\n}\n")),Object(a.b)("h2",{id:"contexts--http-requests"},"Contexts & HTTP Requests"),Object(a.b)("h3",{id:"the-context-object"},"The ",Object(a.b)("inlineCode",{parentName:"h3"},"Context")," object"),Object(a.b)("p",null,"On every request, the controller method is called with a ",Object(a.b)("inlineCode",{parentName:"p"},"Context")," object. This context is unique and specific to the request."),Object(a.b)("p",null,"It has four properties:"),Object(a.b)("table",null,Object(a.b)("thead",{parentName:"table"},Object(a.b)("tr",{parentName:"thead"},Object(a.b)("th",Object(r.a)({parentName:"tr"},{align:null}),"Name"),Object(a.b)("th",Object(r.a)({parentName:"tr"},{align:null}),"Type"),Object(a.b)("th",Object(r.a)({parentName:"tr"},{align:null}),"Description"))),Object(a.b)("tbody",{parentName:"table"},Object(a.b)("tr",{parentName:"tbody"},Object(a.b)("td",Object(r.a)({parentName:"tr"},{align:null}),Object(a.b)("inlineCode",{parentName:"td"},"request")),Object(a.b)("td",Object(r.a)({parentName:"tr"},{align:null}),Object(a.b)("inlineCode",{parentName:"td"},"Request")),Object(a.b)("td",Object(r.a)({parentName:"tr"},{align:null}),"Gives information about the HTTP request.")),Object(a.b)("tr",{parentName:"tbody"},Object(a.b)("td",Object(r.a)({parentName:"tr"},{align:null}),Object(a.b)("inlineCode",{parentName:"td"},"state")),Object(a.b)("td",Object(r.a)({parentName:"tr"},{align:null}),"object"),Object(a.b)("td",Object(r.a)({parentName:"tr"},{align:null}),"Object which can be used to forward data accross several hooks (see ",Object(a.b)("a",Object(r.a)({parentName:"td"},{href:"/foal/docs/architecture/hooks"}),"Hooks"),").")),Object(a.b)("tr",{parentName:"tbody"},Object(a.b)("td",Object(r.a)({parentName:"tr"},{align:null}),Object(a.b)("inlineCode",{parentName:"td"},"user")),Object(a.b)("td",Object(r.a)({parentName:"tr"},{align:null}),"`any"),Object(a.b)("td",Object(r.a)({parentName:"tr"},{align:null}),"undefined`")),Object(a.b)("tr",{parentName:"tbody"},Object(a.b)("td",Object(r.a)({parentName:"tr"},{align:null}),Object(a.b)("inlineCode",{parentName:"td"},"session")),Object(a.b)("td",Object(r.a)({parentName:"tr"},{align:null}),"`Session"),Object(a.b)("td",Object(r.a)({parentName:"tr"},{align:null}),"undefined`")))),Object(a.b)("h3",{id:"http-requests"},"HTTP Requests"),Object(a.b)("p",null,"The ",Object(a.b)("inlineCode",{parentName:"p"},"request")," property is an ",Object(a.b)("a",Object(r.a)({parentName:"p"},{href:"http://expressjs.com/"}),"ExpressJS")," request object. Its complete documentation can be consulted ",Object(a.b)("a",Object(r.a)({parentName:"p"},{href:"http://expressjs.com/en/4x/api.html#req"}),"here"),". The below sections detail common use cases."),Object(a.b)("h4",{id:"read-the-body"},"Read the Body"),Object(a.b)("p",null,"The request body is accessible with the ",Object(a.b)("inlineCode",{parentName:"p"},"body")," attribute. Form data and JSON objects are automatically converted to JavaScript objects in FoalTS."),Object(a.b)("pre",null,Object(a.b)("code",Object(r.a)({parentName:"pre"},{}),'POST /products\n\n{\n  "name": "milk"\n}\n')),Object(a.b)("pre",null,Object(a.b)("code",Object(r.a)({parentName:"pre"},{className:"language-typescript"}),"import { Context, HttpResponseCreated, Post } from '@foal/core';\n\nclass AppController {\n  @Post('/products')\n  createProduct(ctx: Context) {\n    const body = ctx.request.body;\n    // Do something.\n    return new HttpResponseCreated();\n  }\n}\n")),Object(a.b)("h4",{id:"read-path-parameters"},"Read Path Parameters"),Object(a.b)("p",null,"Path parameters are accessible with the ",Object(a.b)("inlineCode",{parentName:"p"},"params")," attribute."),Object(a.b)("pre",null,Object(a.b)("code",Object(r.a)({parentName:"pre"},{}),"GET /products/3\n")),Object(a.b)("pre",null,Object(a.b)("code",Object(r.a)({parentName:"pre"},{className:"language-typescript"}),"import { Context, HttpResponseOK, Get } from '@foal/core';\n\nclass AppController {\n  @Get('/products/:id')\n  readProduct(ctx: Context) {\n    const productId = ctx.request.params.id;\n    // Do something.\n    return new HttpResponseOK();\n  }\n}\n")),Object(a.b)("h4",{id:"read-query-parameters"},"Read Query Parameters"),Object(a.b)("p",null,"Query parameters are accessible with the ",Object(a.b)("inlineCode",{parentName:"p"},"query")," attribute."),Object(a.b)("pre",null,Object(a.b)("code",Object(r.a)({parentName:"pre"},{}),"GET /products?limit=3\n")),Object(a.b)("pre",null,Object(a.b)("code",Object(r.a)({parentName:"pre"},{className:"language-typescript"}),"import { Context, HttpResponseOK, Get } from '@foal/core';\n\nclass AppController {\n  @Get('/products')\n  readProducts(ctx: Context) {\n    const limit = ctx.request.query.limit;\n    // Do something.\n    return new HttpResponseOK();\n  }\n}\n")),Object(a.b)("h4",{id:"read-headers"},"Read Headers"),Object(a.b)("p",null,"Headers are accessible with the ",Object(a.b)("inlineCode",{parentName:"p"},"get")," method."),Object(a.b)("pre",null,Object(a.b)("code",Object(r.a)({parentName:"pre"},{className:"language-typescript"}),"import { Context, HttpResponseOK, Get } from '@foal/core';\n\nclass AppController {\n  @Get('/')\n  index(ctx: Context) {\n    const token = ctx.request.get('Authorization');\n    // Do something.\n    return new HttpResponseOK();\n  }\n}\n")),Object(a.b)("h4",{id:"read-cookies"},"Read Cookies"),Object(a.b)("p",null,"Cookies are accessible with the ",Object(a.b)("inlineCode",{parentName:"p"},"cookies")," attribute."),Object(a.b)("pre",null,Object(a.b)("code",Object(r.a)({parentName:"pre"},{className:"language-typescript"}),"import { Context, HttpResponseOK, Get } from '@foal/core';\n\nclass AppController {\n  @Get('/')\n  index(ctx: Context) {\n    const sessionID: string|undefined = ctx.request.cookies.sessionID;\n    // Do something.\n    return new HttpResponseOK();\n  }\n}\n")),Object(a.b)("h4",{id:"the-controller-method-arguments"},"The Controller Method Arguments"),Object(a.b)("p",null,"The path paramaters and request body are also passed as second and third arguments to the controller method."),Object(a.b)("pre",null,Object(a.b)("code",Object(r.a)({parentName:"pre"},{className:"language-typescript"}),"import { Context, HttpResponseCreated, Put } from '@foal/core';\n\nclass AppController {\n  @Put('/products/:id')\n  updateProduct(ctx: Context, { id }, body) {\n    // Do something.\n    return new HttpResponseCreated();\n  }\n}\n")),Object(a.b)("h2",{id:"http-responses"},"HTTP Responses"),Object(a.b)("p",null,"HTTP responses are defined using ",Object(a.b)("inlineCode",{parentName:"p"},"HttpResponse")," objects. Each controller method must return an instance of this class (or a ",Object(a.b)("em",{parentName:"p"},"promise")," of this instance)."),Object(a.b)("p",null,"Here are subclasses that you can use:\n| HTTP method | Response class | Is abstract? |\n|---|---|---|\n|  | ",Object(a.b)("strong",{parentName:"p"},"2XX Success")," | |\n| 2XX | ",Object(a.b)("inlineCode",{parentName:"p"},"HttpResponseSuccess")," | yes |\n| 200 | ",Object(a.b)("inlineCode",{parentName:"p"},"HttpResponseOK")," | no |\n| 201 | ",Object(a.b)("inlineCode",{parentName:"p"},"HttpResponseCreated")," | no |\n|  | ",Object(a.b)("strong",{parentName:"p"},"3XX Redirection")," | |\n| 3XX | ",Object(a.b)("inlineCode",{parentName:"p"},"HttpResponseRedirection")," | yes |\n| 301 | ",Object(a.b)("inlineCode",{parentName:"p"},"HttpResponseMovedPermanently")," | no |\n| 302 | ",Object(a.b)("inlineCode",{parentName:"p"},"HttpResponseRedirect")," | no |\n|  | ",Object(a.b)("strong",{parentName:"p"},"4XX Client errors")," | |\n| 4XX | ",Object(a.b)("inlineCode",{parentName:"p"},"HttpResponseClientError")," | yes |\n| 400 | ",Object(a.b)("inlineCode",{parentName:"p"},"HttpResponseBadRequest")," | no |\n| 401 | ",Object(a.b)("inlineCode",{parentName:"p"},"HttpResponseUnauthorized")," | no |\n| 403 | ",Object(a.b)("inlineCode",{parentName:"p"},"HttpResponseForbidden")," | no |\n| 404 | ",Object(a.b)("inlineCode",{parentName:"p"},"HttpResponseNotFound")," | no |\n| 405 | ",Object(a.b)("inlineCode",{parentName:"p"},"HttpResponseMethodNotAllowed")," | no |\n| 409 | ",Object(a.b)("inlineCode",{parentName:"p"},"HttpResponseConflict")," | no |\n| 429 | ",Object(a.b)("inlineCode",{parentName:"p"},"HttpResponseTooManyRequests")," | no |\n|  | ",Object(a.b)("strong",{parentName:"p"},"5XX Server errors")," | |\n| 5XX | ",Object(a.b)("inlineCode",{parentName:"p"},"HttpResponseServerError")," | yes |\n| 500 | ",Object(a.b)("inlineCode",{parentName:"p"},"HttpResponseInternalServerError")," | no |\n| 501 | ",Object(a.b)("inlineCode",{parentName:"p"},"HttpResponseNotImplemented")," | no |"),Object(a.b)("p",null,"Most of these responses accept a ",Object(a.b)("inlineCode",{parentName:"p"},"body")," at instantiation. It can be a ",Object(a.b)("inlineCode",{parentName:"p"},"Buffer")," object, a string, an object, a number, an array, or even a Node.JS stream."),Object(a.b)("p",null,Object(a.b)("em",{parentName:"p"},"Example with a body")),Object(a.b)("pre",null,Object(a.b)("code",Object(r.a)({parentName:"pre"},{className:"language-typescript"}),"new HttpResponseBadRequest({\n  message: 'The foo field is missing.'\n})\n")),Object(a.b)("p",null,"In case the body parameter is a stream, you must specify it using the ",Object(a.b)("inlineCode",{parentName:"p"},"stream")," option."),Object(a.b)("p",null,Object(a.b)("em",{parentName:"p"},"Example with a Node.JS stream as body")),Object(a.b)("pre",null,Object(a.b)("code",Object(r.a)({parentName:"pre"},{className:"language-typescript"}),"new HttpResponseOK(myStream, { stream: true })\n")),Object(a.b)("blockquote",null,Object(a.b)("p",{parentName:"blockquote"},"The ",Object(a.b)("inlineCode",{parentName:"p"},"HttpResponseServerError")," constructor also accepts two other options: a ",Object(a.b)("inlineCode",{parentName:"p"},"Context")," object and an error."),Object(a.b)("p",{parentName:"blockquote"},Object(a.b)("em",{parentName:"p"},"Example")),Object(a.b)("pre",{parentName:"blockquote"},Object(a.b)("code",Object(r.a)({parentName:"pre"},{className:"language-typescript"}),"new HttpResponseServerError({}, { error, ctx });\n"))),Object(a.b)("h3",{id:"adding-headers"},"Adding Headers"),Object(a.b)("p",null,Object(a.b)("em",{parentName:"p"},"Example")),Object(a.b)("pre",null,Object(a.b)("code",Object(r.a)({parentName:"pre"},{className:"language-typescript"}),"import { Get, HttpResponseOK } from '@foal/core';\n\nclass AppController {\n  @Get('/')\n  index() {\n    return new HttpResponseOK()\n      .setHeader('Cache-Control', 'max-age=604800, public');\n  }\n}\n")),Object(a.b)("h3",{id:"adding-cookies"},"Adding Cookies"),Object(a.b)("p",null,Object(a.b)("em",{parentName:"p"},"Example with no cookie directives")),Object(a.b)("pre",null,Object(a.b)("code",Object(r.a)({parentName:"pre"},{className:"language-typescript"}),"import { Get, HttpResponseOK } from '@foal/core';\n\nclass AppController {\n  @Get('/')\n  index() {\n    return new HttpResponseOK()\n      .setCookie('state', 'foobar');\n  }\n}\n")),Object(a.b)("p",null,Object(a.b)("em",{parentName:"p"},"Example with cookie directives")),Object(a.b)("pre",null,Object(a.b)("code",Object(r.a)({parentName:"pre"},{className:"language-typescript"}),"import { Get, HttpResponseOK } from '@foal/core';\n\nclass AppController {\n  @Get('/')\n  index() {\n    return new HttpResponseOK()\n      .setCookie('sessionID', 'xxxx', {\n        domain: 'example.com',\n        httpOnly: true,\n        // expires: new Date(2022, 12, 12),\n        maxAge: 3600,\n        path: '/',\n        sameSite: 'lax',\n        secure: true,\n      });\n  }\n}\n")),Object(a.b)("blockquote",null,Object(a.b)("p",{parentName:"blockquote"},"The ",Object(a.b)("inlineCode",{parentName:"p"},"maxAge")," cookie directive defines the number of ",Object(a.b)("strong",{parentName:"p"},"seconds")," until the cookie expires.")),Object(a.b)("h2",{id:"testing-controllers"},"Testing Controllers"),Object(a.b)("p",null,"A controller is a simple class and so can be tested as is. Note that ",Object(a.b)("a",Object(r.a)({parentName:"p"},{href:"/foal/docs/architecture/hooks"}),"hooks")," are ignored upon testing."),Object(a.b)("p",null,Object(a.b)("em",{parentName:"p"},"api.controller.ts (example)")),Object(a.b)("pre",null,Object(a.b)("code",Object(r.a)({parentName:"pre"},{className:"language-typescript"}),"import { Context, Get, HttpResponseOK } from '@foal/core';\nimport { JWTRequired } from '@foal/jwt';\n\nclass ApiController {\n  @Get('/users/me')\n  @JWTRequired()\n  getCurrentUser(ctx: Context) {\n    return new HttpResponseOK(ctx.user);\n  }\n}\n")),Object(a.b)("p",null,Object(a.b)("em",{parentName:"p"},"api.controller.spec.ts (example)")),Object(a.b)("pre",null,Object(a.b)("code",Object(r.a)({parentName:"pre"},{className:"language-typescript"}),"import { strictEqual } from 'assert';\n\nimport { Context, createController, HttpResponseOK, isHttpResponseOK } from '@foal/core';\n\nimport { ApiController } from './api.controller';\n\ndescribe('ApiController', () => {\n\n  it('should return the current user.', () => {\n    // Instantiate the controller.\n    const controller = createController(ApiController);\n\n    // Create a fake user (the current user)\n    const user = { name: 'Alix' };\n\n    // Create a fake Context object to simulate the request.\n    const ctx = new Context({}); // \"{}\" is the request body.\n    ctx.user = user;\n\n    // Execute the controller method and save the response.\n    const response = controller.getCurrentUser(ctx);\n\n    if (!isHttpResponseOK(response)) {\n      throw new Error('The response should be an HttpResponseOK');\n    }\n\n    strictEqual(response.body, user);\n  });\n\n});\n")),Object(a.b)("blockquote",null,Object(a.b)("p",{parentName:"blockquote"},"Due to the way packages are managed by npm, you should always use ",Object(a.b)("inlineCode",{parentName:"p"},"isHttpResponseOK(response)")," rather than ",Object(a.b)("inlineCode",{parentName:"p"},"response instanceof HttpResponseOK")," to avoid reference bugs.")),Object(a.b)("h2",{id:"inheriting-controllers"},"Inheriting Controllers"),Object(a.b)("p",null,Object(a.b)("em",{parentName:"p"},"Example:")),Object(a.b)("pre",null,Object(a.b)("code",Object(r.a)({parentName:"pre"},{className:"language-typescript"}),"import { Get, HttpResponseOK, Post } from '@foal/core';\n\nabstract class ParentController {\n  @Get('/foo')\n  foo() {\n    return new HttpResponseOK();\n  }\n}\n\n\nclass ChildController extends ParentController {\n  @Post('/bar')\n  bar() {\n    return new HttpResponseOK();\n  }\n}\n")),Object(a.b)("p",null,"You can also override ",Object(a.b)("inlineCode",{parentName:"p"},"foo"),". If you don't add a ",Object(a.b)("inlineCode",{parentName:"p"},"Get"),", ",Object(a.b)("inlineCode",{parentName:"p"},"Post"),", ",Object(a.b)("inlineCode",{parentName:"p"},"Patch"),", ",Object(a.b)("inlineCode",{parentName:"p"},"Put"),", ",Object(a.b)("inlineCode",{parentName:"p"},"Delete"),", ",Object(a.b)("inlineCode",{parentName:"p"},"Head")," or ",Object(a.b)("inlineCode",{parentName:"p"},"Options")," decorator then the parent path and HTTP method are used. If you don't add a hook, then the parent hooks are used. Otherwise they are all discarded."))}b.isMDXComponent=!0},251:function(e,t,n){"use strict";n.d(t,"a",(function(){return i})),n.d(t,"b",(function(){return m}));var r=n(0),o=n.n(r);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function c(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function s(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?c(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):c(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function p(e,t){if(null==e)return{};var n,r,o=function(e,t){if(null==e)return{};var n,r,o={},a=Object.keys(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var l=o.a.createContext({}),b=function(e){var t=o.a.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):s(s({},t),e)),n},i=function(e){var t=b(e.components);return o.a.createElement(l.Provider,{value:t},e.children)},d={inlineCode:"code",wrapper:function(e){var t=e.children;return o.a.createElement(o.a.Fragment,{},t)}},u=o.a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,a=e.originalType,c=e.parentName,l=p(e,["components","mdxType","originalType","parentName"]),i=b(n),u=r,m=i["".concat(c,".").concat(u)]||i[u]||d[u]||a;return n?o.a.createElement(m,s(s({ref:t},l),{},{components:n})):o.a.createElement(m,s({ref:t},l))}));function m(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var a=n.length,c=new Array(a);c[0]=u;var s={};for(var p in t)hasOwnProperty.call(t,p)&&(s[p]=t[p]);s.originalType=e,s.mdxType="string"==typeof e?e:r,c[1]=s;for(var l=2;l<a;l++)c[l]=n[l];return o.a.createElement.apply(null,c)}return o.a.createElement.apply(null,n)}u.displayName="MDXCreateElement"}}]);