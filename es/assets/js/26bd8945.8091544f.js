"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[4810],{3905:function(e,n,t){t.d(n,{Zo:function(){return g},kt:function(){return m}});var r=t(7294);function a(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function o(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function l(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?o(Object(t),!0).forEach((function(n){a(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):o(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function i(e,n){if(null==e)return{};var t,r,a=function(e,n){if(null==e)return{};var t,r,a={},o=Object.keys(e);for(r=0;r<o.length;r++)t=o[r],n.indexOf(t)>=0||(a[t]=e[t]);return a}(e,n);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)t=o[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(a[t]=e[t])}return a}var s=r.createContext({}),u=function(e){var n=r.useContext(s),t=n;return e&&(t="function"==typeof e?e(n):l(l({},n),e)),t},g=function(e){var n=u(e.components);return r.createElement(s.Provider,{value:n},e.children)},p={inlineCode:"code",wrapper:function(e){var n=e.children;return r.createElement(r.Fragment,{},n)}},c=r.forwardRef((function(e,n){var t=e.components,a=e.mdxType,o=e.originalType,s=e.parentName,g=i(e,["components","mdxType","originalType","parentName"]),c=u(t),m=a,d=c["".concat(s,".").concat(m)]||c[m]||p[m]||o;return t?r.createElement(d,l(l({ref:n},g),{},{components:t})):r.createElement(d,l({ref:n},g))}));function m(e,n){var t=arguments,a=n&&n.mdxType;if("string"==typeof e||a){var o=t.length,l=new Array(o);l[0]=c;var i={};for(var s in n)hasOwnProperty.call(n,s)&&(i[s]=n[s]);i.originalType=e,i.mdxType="string"==typeof e?e:a,l[1]=i;for(var u=2;u<o;u++)l[u]=t[u];return r.createElement.apply(null,l)}return r.createElement.apply(null,t)}c.displayName="MDXCreateElement"},8215:function(e,n,t){var r=t(7294);n.Z=function(e){var n=e.children,t=e.hidden,a=e.className;return r.createElement("div",{role:"tabpanel",hidden:t,className:a},n)}},9877:function(e,n,t){t.d(n,{Z:function(){return g}});var r=t(7462),a=t(7294),o=t(2389),l=t(9548),i=t(6010),s="tabItem_LplD";function u(e){var n,t,o,u=e.lazy,g=e.block,p=e.defaultValue,c=e.values,m=e.groupId,d=e.className,f=a.Children.map(e.children,(function(e){if((0,a.isValidElement)(e)&&void 0!==e.props.value)return e;throw new Error("Docusaurus error: Bad <Tabs> child <"+("string"==typeof e.type?e.type:e.type.name)+'>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.')})),v=null!=c?c:f.map((function(e){var n=e.props;return{value:n.value,label:n.label,attributes:n.attributes}})),b=(0,l.lx)(v,(function(e,n){return e.value===n.value}));if(b.length>0)throw new Error('Docusaurus error: Duplicate values "'+b.map((function(e){return e.value})).join(", ")+'" found in <Tabs>. Every value needs to be unique.');var k=null===p?p:null!=(n=null!=p?p:null==(t=f.find((function(e){return e.props.default})))?void 0:t.props.value)?n:null==(o=f[0])?void 0:o.props.value;if(null!==k&&!v.some((function(e){return e.value===k})))throw new Error('Docusaurus error: The <Tabs> has a defaultValue "'+k+'" but none of its children has the corresponding value. Available values are: '+v.map((function(e){return e.value})).join(", ")+". If you intend to show no default tab, use defaultValue={null} instead.");var y=(0,l.UB)(),h=y.tabGroupChoices,T=y.setTabGroupChoices,N=(0,a.useState)(k),w=N[0],x=N[1],j=[],O=(0,l.o5)().blockElementScrollPositionUntilNextRender;if(null!=m){var L=h[m];null!=L&&L!==w&&v.some((function(e){return e.value===L}))&&x(L)}var E=function(e){var n=e.currentTarget,t=j.indexOf(n),r=v[t].value;r!==w&&(O(n),x(r),null!=m&&T(m,r))},S=function(e){var n,t=null;switch(e.key){case"ArrowRight":var r=j.indexOf(e.currentTarget)+1;t=j[r]||j[0];break;case"ArrowLeft":var a=j.indexOf(e.currentTarget)-1;t=j[a]||j[j.length-1]}null==(n=t)||n.focus()};return a.createElement("div",{className:"tabs-container"},a.createElement("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,i.Z)("tabs",{"tabs--block":g},d)},v.map((function(e){var n=e.value,t=e.label,o=e.attributes;return a.createElement("li",(0,r.Z)({role:"tab",tabIndex:w===n?0:-1,"aria-selected":w===n,key:n,ref:function(e){return j.push(e)},onKeyDown:S,onFocus:E,onClick:E},o,{className:(0,i.Z)("tabs__item",s,null==o?void 0:o.className,{"tabs__item--active":w===n})}),null!=t?t:n)}))),u?(0,a.cloneElement)(f.filter((function(e){return e.props.value===w}))[0],{className:"margin-vert--md"}):a.createElement("div",{className:"margin-vert--md"},f.map((function(e,n){return(0,a.cloneElement)(e,{key:n,hidden:e.props.value!==w})}))))}function g(e){var n=(0,o.Z)();return a.createElement(u,(0,r.Z)({key:String(n)},e))}},196:function(e,n,t){t.r(n),t.d(n,{frontMatter:function(){return u},contentTitle:function(){return g},metadata:function(){return p},toc:function(){return c},default:function(){return d}});var r=t(7462),a=t(3366),o=(t(7294),t(3905)),l=t(9877),i=t(8215),s=["components"],u={title:"Logging & Depuraci\xf3n"},g=void 0,p={unversionedId:"common/logging-and-debugging",id:"common/logging-and-debugging",title:"Logging & Depuraci\xf3n",description:"HTTP Request Logging",source:"@site/i18n/es/docusaurus-plugin-content-docs/current/common/logging-and-debugging.md",sourceDirName:"common",slug:"/common/logging-and-debugging",permalink:"/es/docs/common/logging-and-debugging",editUrl:"https://github.com/FoalTS/foal/edit/master/docs/docs/common/logging-and-debugging.md",tags:[],version:"current",frontMatter:{title:"Logging & Depuraci\xf3n"},sidebar:"someSidebar",previous:{title:"Templates (SSR)",permalink:"/es/docs/common/templating"},next:{title:"Generar tokens",permalink:"/es/docs/common/generate-tokens"}},c=[{value:"HTTP Request Logging",id:"http-request-logging",children:[],level:2},{value:"Disabling HTTP Request Logging",id:"disabling-http-request-logging",children:[],level:2},{value:"Disabling Error Logging",id:"disabling-error-logging",children:[],level:2},{value:"Logging Hook",id:"logging-hook",children:[],level:2},{value:"Advanced Logging",id:"advanced-logging",children:[],level:2}],m={toc:c};function d(e){var n=e.components,t=(0,a.Z)(e,s);return(0,o.kt)("wrapper",(0,r.Z)({},m,t,{components:n,mdxType:"MDXLayout"}),(0,o.kt)("h2",{id:"http-request-logging"},"HTTP Request Logging"),(0,o.kt)("p",null,"FoalTS uses ",(0,o.kt)("a",{parentName:"p",href:"https://www.npmjs.com/package/morgan"},"morgan")," to log the HTTP requests. You can specify the output format using the environment variable ",(0,o.kt)("inlineCode",{parentName:"p"},"SETTINGS_LOGGER_FORMAT")," or the ",(0,o.kt)("inlineCode",{parentName:"p"},"config/default.json")," file:"),(0,o.kt)(l.Z,{defaultValue:"yaml",values:[{label:"YAML",value:"yaml"},{label:"JSON",value:"json"},{label:"JS",value:"js"}],mdxType:"Tabs"},(0,o.kt)(i.Z,{value:"yaml",mdxType:"TabItem"},(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-yaml"},"settings:\n  loggerFormat: tiny\n"))),(0,o.kt)(i.Z,{value:"json",mdxType:"TabItem"},(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-json"},'{\n  "settings": {\n    "loggerFormat": "tiny"\n  }\n}\n'))),(0,o.kt)(i.Z,{value:"js",mdxType:"TabItem"},(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-javascript"},'module.exports = {\n  settings: {\n    loggerFormat: "tiny"\n  }\n}\n')))),(0,o.kt)("h2",{id:"disabling-http-request-logging"},"Disabling HTTP Request Logging"),(0,o.kt)("p",null,"In some scenarios and environments, you might want to disable http request logging. You can achieve this by setting the ",(0,o.kt)("inlineCode",{parentName:"p"},"loggerFormat")," configuration option to ",(0,o.kt)("inlineCode",{parentName:"p"},"none"),". "),(0,o.kt)(l.Z,{defaultValue:"yaml",values:[{label:"YAML",value:"yaml"},{label:"JSON",value:"json"},{label:"JS",value:"js"}],mdxType:"Tabs"},(0,o.kt)(i.Z,{value:"yaml",mdxType:"TabItem"},(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-yaml"},"settings:\n  loggerFormat: none\n"))),(0,o.kt)(i.Z,{value:"json",mdxType:"TabItem"},(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-json"},'{\n  "settings": {\n    "loggerFormat": "none"\n  }\n}\n'))),(0,o.kt)(i.Z,{value:"js",mdxType:"TabItem"},(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-javascript"},'module.exports = {\n  settings: {\n    loggerFormat: "none"\n  }\n}\n')))),(0,o.kt)("h2",{id:"disabling-error-logging"},"Disabling Error Logging"),(0,o.kt)("p",null,"In some scenarios, you might want to disable error logging (error stack traces that are displayed when an error is thrown in a controller or hook). You can achieve this by setting the ",(0,o.kt)("inlineCode",{parentName:"p"},"allErrors")," configuration option to false. "),(0,o.kt)(l.Z,{defaultValue:"yaml",values:[{label:"YAML",value:"yaml"},{label:"JSON",value:"json"},{label:"JS",value:"js"}],mdxType:"Tabs"},(0,o.kt)(i.Z,{value:"yaml",mdxType:"TabItem"},(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-yaml"},"settings:\n  allErrors: false\n"))),(0,o.kt)(i.Z,{value:"json",mdxType:"TabItem"},(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-json"},'{\n  "settings": {\n    "allErrors": false\n  }\n}\n'))),(0,o.kt)(i.Z,{value:"js",mdxType:"TabItem"},(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-javascript"},"module.exports = {\n  settings: {\n    allErrors: false\n  }\n}\n")))),(0,o.kt)("h2",{id:"logging-hook"},"Logging Hook"),(0,o.kt)("p",null,"FoalTS provides a convenient hook for logging debug messages: ",(0,o.kt)("inlineCode",{parentName:"p"},"Log(message: string, options: LogOptions = {})"),"."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-typescript"},"interface LogOptions {\n  body?: boolean;\n  params?: boolean;\n  headers?: string[]|boolean;\n  query?: boolean;\n}\n")),(0,o.kt)("p",null,(0,o.kt)("em",{parentName:"p"},"Example:")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-typescript"},"import { Get, HttpResponseOK, Log } from '@foal/core';\n\n@Log('AppController', {\n  body: true,\n  headers: [ 'X-CSRF-Token' ],\n  params: true,\n  query: true\n})\nexport class AppController {\n  @Get()\n  index() {\n    return new HttpResponseOK();\n  }\n}\n")),(0,o.kt)("h2",{id:"advanced-logging"},"Advanced Logging"),(0,o.kt)("p",null,"If you need advanced logging, you might be interested in using ",(0,o.kt)("a",{parentName:"p",href:"https://www.npmjs.com/package/winston"},"winston"),", a popular logger in the Node.js ecosystem."),(0,o.kt)("p",null,"Here's an example on how to use it with Foal:"),(0,o.kt)("p",null,(0,o.kt)("em",{parentName:"p"},"LoggerService")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-typescript"},"import * as winston from 'winston';\n\nexport class LoggerService {\n  private logger: any;\n\n  constructor() {\n    this.logger = winston.createLogger({\n      transports: [\n        new winston.transports.Console(),\n        new winston.transports.File({\n          filename: 'logs.txt'\n        })\n      ]\n    });\n  }\n\n  info(msg: string) {\n    this.logger.info(msg);\n  }\n\n  warn(msg: string) {\n    this.logger.warn(msg);\n  }\n\n  error(msg: string) {\n    this.logger.error(msg);\n  }\n\n}\n\n")),(0,o.kt)("p",null,(0,o.kt)("em",{parentName:"p"},"LogUserId hook")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-typescript"},"import { Hook } from '@foal/core';\n// LoggerService import.\n\nexport function LogUserId() {\n  return Hook((ctx, services) => {\n    const logger = services.get(LoggerService);\n    logger.info(`UserId is: ${ctx.user.id}`);\n  });\n}\n\n")),(0,o.kt)("p",null,(0,o.kt)("em",{parentName:"p"},"ProductController")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-typescript"},"import { Get } from '@foal/core';\n// LogUserId import.\n\nexport class ProductController {\n\n  @Get('/')\n  @LogUserId()\n  readProducts() {\n    ...\n  }\n\n}\n\n")),(0,o.kt)("p",null,(0,o.kt)("em",{parentName:"p"},"AuthController")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-typescript"},"import { dependency, Post } from '@foal/core';\n// LoggerService import.\n\nexport class AuthController {\n  @dependency\n  logger: LoggerService;\n\n  @Post('/signup')\n  signup() {\n    ...\n    this.logger.info('Someone signed up!');\n  }\n\n}\n\n")))}d.isMDXComponent=!0}}]);