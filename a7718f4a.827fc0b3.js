(window.webpackJsonp=window.webpackJsonp||[]).push([[132],{200:function(e,t,n){"use strict";n.r(t),n.d(t,"frontMatter",(function(){return i})),n.d(t,"metadata",(function(){return s})),n.d(t,"rightToc",(function(){return l})),n.d(t,"default",(function(){return d}));var r=n(3),o=n(7),a=(n(0),n(251)),i={},s={unversionedId:"tutorials/multi-user-todo-list/2-the-user-and-todo-models",id:"version-1.x/tutorials/multi-user-todo-list/2-the-user-and-todo-models",isDocsHomePage:!1,title:"2-the-user-and-todo-models",description:"The User & Todo Models",source:"@site/versioned_docs/version-1.x/tutorials/multi-user-todo-list/2-the-user-and-todo-models.md",slug:"/tutorials/multi-user-todo-list/2-the-user-and-todo-models",permalink:"/foal/docs/1.x/tutorials/multi-user-todo-list/2-the-user-and-todo-models",editUrl:"https://github.com/FoalTS/foal/edit/master/docs/versioned_docs/version-1.x/tutorials/multi-user-todo-list/2-the-user-and-todo-models.md",version:"1.x"},l=[{value:"The User Model",id:"the-user-model",children:[]},{value:"The Todo Model",id:"the-todo-model",children:[]},{value:"The Migrations",id:"the-migrations",children:[]}],u={rightToc:l};function d(e){var t=e.components,n=Object(o.a)(e,["components"]);return Object(a.b)("wrapper",Object(r.a)({},u,n,{components:t,mdxType:"MDXLayout"}),Object(a.b)("h1",{id:"the-user--todo-models"},"The User & Todo Models"),Object(a.b)("p",null,"First of all, if you have downloaded the source code of the previous tutorial, compile and run the existing migrations."),Object(a.b)("pre",null,Object(a.b)("code",Object(r.a)({parentName:"pre"},{}),"npm run build:migrations\nnpm run migration:run\n")),Object(a.b)("h2",{id:"the-user-model"},"The User Model"),Object(a.b)("p",null,"Then open the ",Object(a.b)("inlineCode",{parentName:"p"},"user.entity.ts")," file from the ",Object(a.b)("inlineCode",{parentName:"p"},"src/app/entities")," directory. The ",Object(a.b)("inlineCode",{parentName:"p"},"User")," entity is the main class used by the framework's authentication system."),Object(a.b)("p",null,"Add the ",Object(a.b)("inlineCode",{parentName:"p"},"email")," and ",Object(a.b)("inlineCode",{parentName:"p"},"password")," properties and the ",Object(a.b)("inlineCode",{parentName:"p"},"setPassword")," method."),Object(a.b)("pre",null,Object(a.b)("code",Object(r.a)({parentName:"pre"},{className:"language-typescript"}),"import { hashPassword } from '@foal/core';\nimport { Column, Entity, PrimaryGeneratedColumn } from 'typeorm';\n\n@Entity()\nexport class User {\n\n  @PrimaryGeneratedColumn()\n  id: number;\n\n  @Column({ unique: true })\n  email: string;\n\n  @Column()\n  password: string;\n\n  async setPassword(password: string) {\n    this.password = await hashPassword(password);\n  }\n\n}\n\n")),Object(a.b)("p",null,"The ",Object(a.b)("inlineCode",{parentName:"p"},"setPassword")," method uses ",Object(a.b)("inlineCode",{parentName:"p"},"hashPassword")," to hash passwords before storing them in the database. You must use this method to set a password instead of directly assigning a value to the ",Object(a.b)("inlineCode",{parentName:"p"},"password")," attribute."),Object(a.b)("h2",{id:"the-todo-model"},"The Todo Model"),Object(a.b)("p",null,"The Todo model defined in the previous tutorial now needs a ",Object(a.b)("inlineCode",{parentName:"p"},"owner")," property to know which user it belongs to."),Object(a.b)("p",null,"Replace the content of ",Object(a.b)("inlineCode",{parentName:"p"},"todo.entity.ts"),"."),Object(a.b)("pre",null,Object(a.b)("code",Object(r.a)({parentName:"pre"},{className:"language-typescript"}),"import { Column, Entity, ManyToOne, PrimaryGeneratedColumn } from 'typeorm';\nimport { User } from './user.entity';\n\n@Entity()\nexport class Todo {\n\n  @PrimaryGeneratedColumn()\n  id: number;\n\n  @Column()\n  text: string;\n\n  @ManyToOne(type => User)\n  owner: User;\n\n}\n\n")),Object(a.b)("p",null,"In the database the ",Object(a.b)("inlineCode",{parentName:"p"},"todo")," table will look like this:"),Object(a.b)("pre",null,Object(a.b)("code",Object(r.a)({parentName:"pre"},{}),"+------------+-----------+-------------------------------------+\n|                             todo                             |\n+------------+-----------+-------------------------------------+\n| id         | integer   | PRIMARY KEY AUTO_INCREMENT NOT NULL |\n| text       | varchar   | NOT NULL                            |\n| ownerId    | integer   |                                     |\n+------------+-----------+-------------------------------------+\n")),Object(a.b)("h2",{id:"the-migrations"},"The Migrations"),Object(a.b)("p",null,"The last step is to create/update the tables in the database. As in the first tutorial, you will use migrations for this."),Object(a.b)("p",null,"Build the application."),Object(a.b)("pre",null,Object(a.b)("code",Object(r.a)({parentName:"pre"},{}),"npm run build:app\n")),Object(a.b)("p",null,"Generate the migrations from the entities."),Object(a.b)("pre",null,Object(a.b)("code",Object(r.a)({parentName:"pre"},{}),"npm run migration:generate -- --name=user-and-todo\n")),Object(a.b)("p",null,"A new file is added in ",Object(a.b)("inlineCode",{parentName:"p"},"src/migrations"),"."),Object(a.b)("pre",null,Object(a.b)("code",Object(r.a)({parentName:"pre"},{className:"language-typescript"}),'import {MigrationInterface, QueryRunner} from "typeorm";\n\nexport class userAndTodo1562765487944 implements MigrationInterface {\n\n    public async up(queryRunner: QueryRunner): Promise<void> {\n        // SQL queries...\n    }\n\n    public async down(queryRunner: QueryRunner): Promise<void> {\n        // SQL queries...\n    }\n\n}\n')),Object(a.b)("p",null,"Then build and run the new migration file."),Object(a.b)("pre",null,Object(a.b)("code",Object(r.a)({parentName:"pre"},{}),"npm run build:migrations\nnpm run migration:run\n")))}d.isMDXComponent=!0},251:function(e,t,n){"use strict";n.d(t,"a",(function(){return c})),n.d(t,"b",(function(){return m}));var r=n(0),o=n.n(r);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function s(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,r,o=function(e,t){if(null==e)return{};var n,r,o={},a=Object.keys(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var u=o.a.createContext({}),d=function(e){var t=o.a.useContext(u),n=t;return e&&(n="function"==typeof e?e(t):s(s({},t),e)),n},c=function(e){var t=d(e.components);return o.a.createElement(u.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return o.a.createElement(o.a.Fragment,{},t)}},b=o.a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,a=e.originalType,i=e.parentName,u=l(e,["components","mdxType","originalType","parentName"]),c=d(n),b=r,m=c["".concat(i,".").concat(b)]||c[b]||p[b]||a;return n?o.a.createElement(m,s(s({ref:t},u),{},{components:n})):o.a.createElement(m,s({ref:t},u))}));function m(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var a=n.length,i=new Array(a);i[0]=b;var s={};for(var l in t)hasOwnProperty.call(t,l)&&(s[l]=t[l]);s.originalType=e,s.mdxType="string"==typeof e?e:r,i[1]=s;for(var u=2;u<a;u++)i[u]=n[u];return o.a.createElement.apply(null,i)}return o.a.createElement.apply(null,n)}b.displayName="MDXCreateElement"}}]);